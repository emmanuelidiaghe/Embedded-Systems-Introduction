
MULTIPLE TEST 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000001b2  00000226  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000260  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000989  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067c  00000000  00000000  00000c9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004f1  00000000  00000000  00001319  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000124  00000000  00000000  0000180c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e8  00000000  00000000  00001930  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000372  00000000  00000000  00001e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0000218a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 eb       	ldi	r30, 0xB2	; 178
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 9f 00 	call	0x13e	; 0x13e <main>
  7a:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z9HC595Initv>:
		Write3(led_pattern[i]);
		Write4(led_pattern[i]);
		HC595Latch();
		_delay_ms(500);
	}
}
  82:	87 b3       	in	r24, 0x17	; 23
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	87 bb       	out	0x17, r24	; 23
  88:	8f 9a       	sbi	0x11, 7	; 17
  8a:	08 95       	ret

0000008c <_Z10HC595Latchv>:
  8c:	c7 9a       	sbi	0x18, 7	; 24
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	98 2f       	mov	r25, r24
  92:	9a 95       	dec	r25
  94:	f1 f7       	brne	.-4      	; 0x92 <_Z10HC595Latchv+0x6>
  96:	c7 98       	cbi	0x18, 7	; 24
  98:	8a 95       	dec	r24
  9a:	f1 f7       	brne	.-4      	; 0x98 <_Z10HC595Latchv+0xc>
  9c:	08 95       	ret

0000009e <_Z11HC595Pulse1v>:
  9e:	c4 9a       	sbi	0x18, 4	; 24
  a0:	c4 98       	cbi	0x18, 4	; 24
  a2:	08 95       	ret

000000a4 <_Z11HC595Pulse2v>:
  a4:	c5 9a       	sbi	0x18, 5	; 24
  a6:	c5 98       	cbi	0x18, 5	; 24
  a8:	08 95       	ret

000000aa <_Z11HC595Pulse3v>:
  aa:	c6 9a       	sbi	0x18, 6	; 24
  ac:	c6 98       	cbi	0x18, 6	; 24
  ae:	08 95       	ret

000000b0 <_Z11HC595Pulse4v>:
  b0:	97 9a       	sbi	0x12, 7	; 18
  b2:	97 98       	cbi	0x12, 7	; 18
  b4:	08 95       	ret

000000b6 <_Z6Write1h>:
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	d8 2f       	mov	r29, r24
  bc:	c8 e0       	ldi	r28, 0x08	; 8
  be:	dd 23       	and	r29, r29
  c0:	14 f4       	brge	.+4      	; 0xc6 <_Z6Write1h+0x10>
  c2:	c0 9a       	sbi	0x18, 0	; 24
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <_Z6Write1h+0x12>
  c6:	c0 98       	cbi	0x18, 0	; 24
  c8:	0e 94 4f 00 	call	0x9e	; 0x9e <_Z11HC595Pulse1v>
  cc:	dd 0f       	add	r29, r29
  ce:	c1 50       	subi	r28, 0x01	; 1
  d0:	b1 f7       	brne	.-20     	; 0xbe <_Z6Write1h+0x8>
  d2:	df 91       	pop	r29
  d4:	cf 91       	pop	r28
  d6:	08 95       	ret

000000d8 <_Z6Write2h>:
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
  dc:	d8 2f       	mov	r29, r24
  de:	c8 e0       	ldi	r28, 0x08	; 8
  e0:	dd 23       	and	r29, r29
  e2:	14 f4       	brge	.+4      	; 0xe8 <_Z6Write2h+0x10>
  e4:	c1 9a       	sbi	0x18, 1	; 24
  e6:	01 c0       	rjmp	.+2      	; 0xea <_Z6Write2h+0x12>
  e8:	c1 98       	cbi	0x18, 1	; 24
  ea:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z11HC595Pulse2v>
  ee:	dd 0f       	add	r29, r29
  f0:	c1 50       	subi	r28, 0x01	; 1
  f2:	b1 f7       	brne	.-20     	; 0xe0 <_Z6Write2h+0x8>
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	08 95       	ret

000000fa <_Z6Write3h>:
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	d8 2f       	mov	r29, r24
 100:	c8 e0       	ldi	r28, 0x08	; 8
 102:	dd 23       	and	r29, r29
 104:	14 f4       	brge	.+4      	; 0x10a <_Z6Write3h+0x10>
 106:	c2 9a       	sbi	0x18, 2	; 24
 108:	01 c0       	rjmp	.+2      	; 0x10c <_Z6Write3h+0x12>
 10a:	c2 98       	cbi	0x18, 2	; 24
 10c:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11HC595Pulse3v>
 110:	dd 0f       	add	r29, r29
 112:	c1 50       	subi	r28, 0x01	; 1
 114:	b1 f7       	brne	.-20     	; 0x102 <_Z6Write3h+0x8>
 116:	df 91       	pop	r29
 118:	cf 91       	pop	r28
 11a:	08 95       	ret

0000011c <_Z6Write4h>:
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	d8 2f       	mov	r29, r24
 122:	c8 e0       	ldi	r28, 0x08	; 8
 124:	dd 23       	and	r29, r29
 126:	14 f4       	brge	.+4      	; 0x12c <_Z6Write4h+0x10>
 128:	c3 9a       	sbi	0x18, 3	; 24
 12a:	01 c0       	rjmp	.+2      	; 0x12e <_Z6Write4h+0x12>
 12c:	c3 98       	cbi	0x18, 3	; 24
 12e:	0e 94 58 00 	call	0xb0	; 0xb0 <_Z11HC595Pulse4v>
 132:	dd 0f       	add	r29, r29
 134:	c1 50       	subi	r28, 0x01	; 1
 136:	b1 f7       	brne	.-20     	; 0x124 <_Z6Write4h+0x8>
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <main>:

 int main()
{
	DDRC=0xFF;
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	84 bb       	out	0x14, r24	; 20
	PORTC=0x00;
 142:	15 ba       	out	0x15, r1	; 21
	
	sei();
 144:	78 94       	sei
	
	TCCR1B = (1<<CS12);
 146:	84 e0       	ldi	r24, 0x04	; 4
 148:	8e bd       	out	0x2e, r24	; 46
	TIMSK =  (1<<OCIE1A);
 14a:	80 e1       	ldi	r24, 0x10	; 16
 14c:	89 bf       	out	0x39, r24	; 57
	
	OCR1A = 62500;
 14e:	84 e2       	ldi	r24, 0x24	; 36
 150:	94 ef       	ldi	r25, 0xF4	; 244
 152:	9b bd       	out	0x2b, r25	; 43
 154:	8a bd       	out	0x2a, r24	; 42
	
	//Initialize HC595 system
	HC595Init();
 156:	0e 94 41 00 	call	0x82	; 0x82 <_Z9HC595Initv>
 15a:	0f 2e       	mov	r0, r31
 15c:	f0 e6       	ldi	r31, 0x60	; 96
 15e:	cf 2e       	mov	r12, r31
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	df 2e       	mov	r13, r31
 164:	f0 2d       	mov	r31, r0
 166:	0f 2e       	mov	r0, r31
 168:	fa e6       	ldi	r31, 0x6A	; 106
 16a:	ef 2e       	mov	r14, r31
 16c:	f0 e0       	ldi	r31, 0x00	; 0
 16e:	ff 2e       	mov	r15, r31
 170:	f0 2d       	mov	r31, r0
 172:	e6 01       	movw	r28, r12
 174:	8e 01       	movw	r16, r28
	while(1)
	{
		//HC595WRITE();
		for(uint8_t i=0;i<10;i++)
		{
			Write1(led_pattern[i]);
 176:	88 81       	ld	r24, Y
 178:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z6Write1h>
			Write2(led_pattern[i]);
 17c:	88 81       	ld	r24, Y
 17e:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z6Write2h>
			Write3(led_pattern[i]);
 182:	89 91       	ld	r24, Y+
 184:	0e 94 7d 00 	call	0xfa	; 0xfa <_Z6Write3h>
			Write4(led_pattern[i]);
 188:	f8 01       	movw	r30, r16
 18a:	80 81       	ld	r24, Z
 18c:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z6Write4h>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 190:	ff ef       	ldi	r31, 0xFF	; 255
 192:	29 e6       	ldi	r18, 0x69	; 105
 194:	88 e1       	ldi	r24, 0x18	; 24
 196:	f1 50       	subi	r31, 0x01	; 1
 198:	20 40       	sbci	r18, 0x00	; 0
 19a:	80 40       	sbci	r24, 0x00	; 0
 19c:	e1 f7       	brne	.-8      	; 0x196 <main+0x58>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <main+0x62>
 1a0:	00 00       	nop
			
			_delay_ms(500);
			HC595Latch();
 1a2:	0e 94 46 00 	call	0x8c	; 0x8c <_Z10HC595Latchv>
	HC595Init();

	while(1)
	{
		//HC595WRITE();
		for(uint8_t i=0;i<10;i++)
 1a6:	ce 15       	cp	r28, r14
 1a8:	df 05       	cpc	r29, r15
 1aa:	21 f7       	brne	.-56     	; 0x174 <main+0x36>
 1ac:	e2 cf       	rjmp	.-60     	; 0x172 <main+0x34>

000001ae <_exit>:
 1ae:	f8 94       	cli

000001b0 <__stop_program>:
 1b0:	ff cf       	rjmp	.-2      	; 0x1b0 <__stop_program>
