
A6GSMmodule.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  000001f0  00000264  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000294  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b3a  00000000  00000000  00000350  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000699  00000000  00000000  00000e8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003e5  00000000  00000000  00001523  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001908  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000455  00000000  00000000  000019b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001f4  00000000  00000000  00001e0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002001  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ef       	ldi	r30, 0xF0	; 240
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 39       	cpi	r26, 0x90	; 144
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 c6 00 	call	0x18c	; 0x18c <main>
  7a:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_Z10USART_Initm>:
	_delay_ms(2000);
	USART_SendString(message);
	_delay_ms(1000);
	USART_TxChar(0x1A);  //Ctrl+Z
	USART_SendString("\r");
}
  82:	2a b1       	in	r18, 0x0a	; 10
  84:	28 61       	ori	r18, 0x18	; 24
  86:	2a b9       	out	0x0a, r18	; 10
  88:	20 b5       	in	r18, 0x20	; 32
  8a:	26 68       	ori	r18, 0x86	; 134
  8c:	20 bd       	out	0x20, r18	; 32
  8e:	dc 01       	movw	r26, r24
  90:	cb 01       	movw	r24, r22
  92:	88 0f       	add	r24, r24
  94:	99 1f       	adc	r25, r25
  96:	aa 1f       	adc	r26, r26
  98:	bb 1f       	adc	r27, r27
  9a:	88 0f       	add	r24, r24
  9c:	99 1f       	adc	r25, r25
  9e:	aa 1f       	adc	r26, r26
  a0:	bb 1f       	adc	r27, r27
  a2:	9c 01       	movw	r18, r24
  a4:	ad 01       	movw	r20, r26
  a6:	22 0f       	add	r18, r18
  a8:	33 1f       	adc	r19, r19
  aa:	44 1f       	adc	r20, r20
  ac:	55 1f       	adc	r21, r21
  ae:	22 0f       	add	r18, r18
  b0:	33 1f       	adc	r19, r19
  b2:	44 1f       	adc	r20, r20
  b4:	55 1f       	adc	r21, r21
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	72 e1       	ldi	r23, 0x12	; 18
  ba:	8a e7       	ldi	r24, 0x7A	; 122
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <__udivmodsi4>
  c2:	8f ef       	ldi	r24, 0xFF	; 255
  c4:	82 0f       	add	r24, r18
  c6:	89 b9       	out	0x09, r24	; 9
  c8:	da 01       	movw	r26, r20
  ca:	c9 01       	movw	r24, r18
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	a1 09       	sbc	r26, r1
  d0:	b1 09       	sbc	r27, r1
  d2:	89 2f       	mov	r24, r25
  d4:	9a 2f       	mov	r25, r26
  d6:	ab 2f       	mov	r26, r27
  d8:	bb 27       	eor	r27, r27
  da:	80 bd       	out	0x20, r24	; 32
  dc:	08 95       	ret

000000de <_Z12USART_TxCharc>:
  de:	8c b9       	out	0x0c, r24	; 12
  e0:	5d 9b       	sbis	0x0b, 5	; 11
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <_Z12USART_TxCharc+0x2>
  e4:	08 95       	ret

000000e6 <_Z16USART_SendStringPKc>:
  e6:	cf 93       	push	r28
  e8:	df 93       	push	r29
  ea:	ec 01       	movw	r28, r24
  ec:	88 81       	ld	r24, Y
  ee:	88 23       	and	r24, r24
  f0:	31 f0       	breq	.+12     	; 0xfe <_Z16USART_SendStringPKc+0x18>
  f2:	21 96       	adiw	r28, 0x01	; 1
  f4:	0e 94 6f 00 	call	0xde	; 0xde <_Z12USART_TxCharc>
  f8:	89 91       	ld	r24, Y+
  fa:	81 11       	cpse	r24, r1
  fc:	fb cf       	rjmp	.-10     	; 0xf4 <_Z16USART_SendStringPKc+0xe>
  fe:	df 91       	pop	r29
 100:	cf 91       	pop	r28
 102:	08 95       	ret

00000104 <_Z4callPKc>:
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	ec 01       	movw	r28, r24
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	34 e3       	ldi	r19, 0x34	; 52
 10e:	8c e0       	ldi	r24, 0x0C	; 12
 110:	21 50       	subi	r18, 0x01	; 1
 112:	30 40       	sbci	r19, 0x00	; 0
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <_Z4callPKc+0xc>
 118:	00 c0       	rjmp	.+0      	; 0x11a <_Z4callPKc+0x16>
 11a:	00 00       	nop
 11c:	60 e8       	ldi	r22, 0x80	; 128
 11e:	75 e2       	ldi	r23, 0x25	; 37
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 41 00 	call	0x82	; 0x82 <_Z10USART_Initm>
 128:	9f ef       	ldi	r25, 0xFF	; 255
 12a:	21 ee       	ldi	r18, 0xE1	; 225
 12c:	34 e0       	ldi	r19, 0x04	; 4
 12e:	91 50       	subi	r25, 0x01	; 1
 130:	20 40       	sbci	r18, 0x00	; 0
 132:	30 40       	sbci	r19, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <_Z4callPKc+0x2a>
 136:	00 c0       	rjmp	.+0      	; 0x138 <_Z4callPKc+0x34>
 138:	00 00       	nop
 13a:	80 e6       	ldi	r24, 0x60	; 96
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 73 00 	call	0xe6	; 0xe6 <_Z16USART_SendStringPKc>
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	99 e6       	ldi	r25, 0x69	; 105
 146:	28 e1       	ldi	r18, 0x18	; 24
 148:	81 50       	subi	r24, 0x01	; 1
 14a:	90 40       	sbci	r25, 0x00	; 0
 14c:	20 40       	sbci	r18, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <_Z4callPKc+0x44>
 150:	00 c0       	rjmp	.+0      	; 0x152 <_Z4callPKc+0x4e>
 152:	00 00       	nop
 154:	84 e6       	ldi	r24, 0x64	; 100
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 73 00 	call	0xe6	; 0xe6 <_Z16USART_SendStringPKc>
 15c:	ce 01       	movw	r24, r28
 15e:	0e 94 73 00 	call	0xe6	; 0xe6 <_Z16USART_SendStringPKc>
 162:	86 e7       	ldi	r24, 0x76	; 118
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	0e 94 73 00 	call	0xe6	; 0xe6 <_Z16USART_SendStringPKc>
 16a:	3a ea       	ldi	r19, 0xAA	; 170
 16c:	86 ee       	ldi	r24, 0xE6	; 230
 16e:	96 e9       	ldi	r25, 0x96	; 150
 170:	21 e0       	ldi	r18, 0x01	; 1
 172:	31 50       	subi	r19, 0x01	; 1
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	90 40       	sbci	r25, 0x00	; 0
 178:	20 40       	sbci	r18, 0x00	; 0
 17a:	d9 f7       	brne	.-10     	; 0x172 <_Z4callPKc+0x6e>
 17c:	00 00       	nop
 17e:	88 e6       	ldi	r24, 0x68	; 104
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	0e 94 73 00 	call	0xe6	; 0xe6 <_Z16USART_SendStringPKc>
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <main>:

//gsm Gsm;

int main(void)
{
	call("+2347061045015");
 18c:	81 e8       	ldi	r24, 0x81	; 129
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 82 00 	call	0x104	; 0x104 <_Z4callPKc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 194:	2f ef       	ldi	r18, 0xFF	; 255
 196:	89 e6       	ldi	r24, 0x69	; 105
 198:	98 e1       	ldi	r25, 0x18	; 24
 19a:	21 50       	subi	r18, 0x01	; 1
 19c:	80 40       	sbci	r24, 0x00	; 0
 19e:	90 40       	sbci	r25, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0xe>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x18>
 1a4:	00 00       	nop

#include "C://Emancipator/Emancipator.h"

//gsm Gsm;

int main(void)
 1a6:	ff cf       	rjmp	.-2      	; 0x1a6 <main+0x1a>

000001a8 <__udivmodsi4>:
 1a8:	a1 e2       	ldi	r26, 0x21	; 33
 1aa:	1a 2e       	mov	r1, r26
 1ac:	aa 1b       	sub	r26, r26
 1ae:	bb 1b       	sub	r27, r27
 1b0:	fd 01       	movw	r30, r26
 1b2:	0d c0       	rjmp	.+26     	; 0x1ce <__udivmodsi4_ep>

000001b4 <__udivmodsi4_loop>:
 1b4:	aa 1f       	adc	r26, r26
 1b6:	bb 1f       	adc	r27, r27
 1b8:	ee 1f       	adc	r30, r30
 1ba:	ff 1f       	adc	r31, r31
 1bc:	a2 17       	cp	r26, r18
 1be:	b3 07       	cpc	r27, r19
 1c0:	e4 07       	cpc	r30, r20
 1c2:	f5 07       	cpc	r31, r21
 1c4:	20 f0       	brcs	.+8      	; 0x1ce <__udivmodsi4_ep>
 1c6:	a2 1b       	sub	r26, r18
 1c8:	b3 0b       	sbc	r27, r19
 1ca:	e4 0b       	sbc	r30, r20
 1cc:	f5 0b       	sbc	r31, r21

000001ce <__udivmodsi4_ep>:
 1ce:	66 1f       	adc	r22, r22
 1d0:	77 1f       	adc	r23, r23
 1d2:	88 1f       	adc	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	1a 94       	dec	r1
 1d8:	69 f7       	brne	.-38     	; 0x1b4 <__udivmodsi4_loop>
 1da:	60 95       	com	r22
 1dc:	70 95       	com	r23
 1de:	80 95       	com	r24
 1e0:	90 95       	com	r25
 1e2:	9b 01       	movw	r18, r22
 1e4:	ac 01       	movw	r20, r24
 1e6:	bd 01       	movw	r22, r26
 1e8:	cf 01       	movw	r24, r30
 1ea:	08 95       	ret

000001ec <_exit>:
 1ec:	f8 94       	cli

000001ee <__stop_program>:
 1ee:	ff cf       	rjmp	.-2      	; 0x1ee <__stop_program>
